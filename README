Sistema Inteligente de Fiscalização de Pesca

O sistema tem como objetivo identificar e classificar embarcações de pesca regulares, irregulares e suspeitas com base em dados de rastreamento (AIS), licenciamento e atividades de pesca.
Ele combina análise heurística, aprendizado de máquina (Random Forest e Isolation Forest) e visualização interativa em mapa.

O resultado final é um arquivo consolidado com indicadores de risco e um mapa interativo com a posição e status de cada embarcação.

1. Estrutura do Projeto
├── dados_pesca/
│   ├── atividades_pesca.csv
│   ├── embarcacoes_licencas.csv
│   ├── rastreamento_ais.csv
│   ├── fiscalizacoes.csv
│   └── integracao_features.csv     ← Saída final com todas as features
│
├── app.py                          ← Script principal
├── requirements.txt                ← Dependências do ambiente
└── README.md                       ← Este arquivo

2. Dependências
2.1. Requisitos de Ambiente

Python 3.9 ou superior

Sistema operacional: Linux, Windows ou macOS

Memória mínima recomendada: 4 GB

2.2. Instalação das Bibliotecas

Crie um ambiente virtual (opcional, mas recomendado):

python3 -m venv venv
source venv/bin/activate        # Linux / Mac
venv\Scripts\activate           # Windows


Instale as dependências necessárias:

pip install -r requirements.txt

2.3. Conteúdo do requirements.txt
pandas
numpy
scikit-learn
folium
matplotlib


Caso esteja usando Jupyter Notebook, inclua também:

jupyter

3. Execução do Sistema
3.1. Arquivos de Entrada

Antes de rodar o sistema, verifique se os seguintes CSVs estão presentes na pasta dados_pesca/:

Arquivo	Descrição
embarcacoes_licencas.csv	Registro de embarcações e situação da licença
atividades_pesca.csv	Atividades de pesca (data, local, espécie, infrações)
rastreamento_ais.csv	Dados de posição e velocidade da embarcação
fiscalizacoes.csv	Registros de fiscalizações realizadas e resultados

Cada arquivo deve conter pelo menos 50–100 registros para permitir aprendizado consistente.

3.2. Execução

No terminal, execute o comando abaixo na raiz do projeto:

python3 app.py


O sistema realizará automaticamente as seguintes etapas:

Leitura e integração dos datasets

Cálculo de métricas AIS (velocidade média, distância total, tempo parado, etc.)

Marcação heurística de suspeitos

Treinamento de modelos (RandomForest e IsolationForest)

Validação com dados de fiscalização

Geração do arquivo final e mapa interativo

4. Estrutura de Saída

Após a execução, serão gerados:

Arquivo / Saída	  Descrição
integracao_features.csv	Base consolidada com todas as features e previsões
mapa_barcos.html	Mapa interativo com os status de cada embarcação
Saída de console	Relatórios de acurácia, validação cruzada e métricas

4.1. Legenda do Mapa
Cor	Significado
🔴 Vermelho	Infrator confirmado (irregular + suspeito)
🟠 Laranja	Suspeito comportamental
⚫ Cinza	Irregular documental
🔵 Azul	Regular (sem irregularidades)
